syntax on
" MacVim settings
set number
set wrap
set nocompatible              " be iMproved, required
filetype off                  " required
set encoding=utf-8
set laststatus=2
set noshowmode
set hidden          " allow unsaved background buffers and remember marks/undo for them
set history=9999
set cursorline
set shell=bash
set backspace=indent,eol,start      " allow backspacing over everything in insert mode
set autoread        " autoreload
set swapfile
set dir=/tmp

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'bling/vim-airline'
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
" Plugin 'Valloric/YouCompleteMe'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

map <C-t> :NERDTreeToggle<CR>
map <C-n> :NERDTreeFind<CR>
" autocmd VimEnter,BufWinEnter,BufRead * NERDTreeFind

" markdown also starts with .md
autocmd BufNewFile,BufRead *.md set filetype=markdown
" With a map leader it's possible to do extra key combinations
" " like <leader>w saves the current file
let mapleader = " " " Leader is the space key
let g:mapleader = " "
" easier write
nmap <leader>w :w!<cr>
" easier quit
nmap <leader>q :q<cr>
nmap <leader>x :x<cr>

" Vim-airline
let g:airline_theme='bubblegum'
let g:airline_powerline_fonts = 1
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab

" Sudo
cmap w!! w !sudo tee > /dev/null %

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MULTIPURPOSE TAB KEY
" Indent if we're at the beginning of a line. Else, do completion.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction
inoremap <expr> <tab> InsertTabWrapper()
inoremap <s-tab> <c-n>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" OPEN FILES IN DIRECTORY OF CURRENT FILE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
cnoremap <expr> %% expand('%:h').'/'
map <leader>e :edit %%
map <leader>v :view %%

" KEYMAP WINDOW NAVIGATION
map <leader>h <C-w>h
map <leader>j <C-w>j
map <leader>k <C-w>k
map <leader>l <C-w>l

" Navigation Buffer
nmap <leader>n :bn<cr>
nmap <leader>p :bp<cr>
map <leader>] :bn<cr>
map <leader>[ :bp<cr>

if has("gui")
    set guioptions=cemg
    set guifont=Source\ Code\ Pro\ for\ Powerline
endif

if has("gui_macvim")
    set t_Co=256
    set background=dark
    color Tomorrow-Night-Eighties
    set guifont=Source\ Code\ Pro\ for\ Powerline:h15
    set guioptions=cemg
endif

if has("macunix")
    map <leader>] :bn<cr>
    map <leader>[ :bp<cr>
endif

if has("unix")
    set background=dark
    color Tomorrow-Night-Eighties
endif

set showcmd
